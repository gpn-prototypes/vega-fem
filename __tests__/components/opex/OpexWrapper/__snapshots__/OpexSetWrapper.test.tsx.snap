// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpexSetWrapper Эконопмика snapshot test 1`] = `
<div
  className="BlockWrapper"
>
  <div
    className={
      Object {
        "has": [Function],
        "is": [Function],
        "mix": [Function],
        "split": [Function],
        "state": [Function],
        "toString": [Function],
      }
    }
  >
    <div
      className={
        Object {
          "has": [Function],
          "is": [Function],
          "mix": [Function],
          "split": [Function],
          "state": [Function],
          "toString": [Function],
        }
      }
    >
      <span
        className="Text text text_size_xs text_view_primary"
      >
        OPEX
      </span>
      <span
        className="Icon Icon_size_xs IconSelect"
      >
        <svg
          className="Icon-Svg"
          viewBox="0 0 12 12"
        >
          <path
            d="M6 8.5L10 4H2l4 4.5z"
          />
        </svg>
      </span>
    </div>
  </div>
  <div
    className={
      Object {
        "has": [Function],
        "is": [Function],
        "mix": [Function],
        "split": [Function],
        "state": [Function],
        "toString": [Function],
      }
    }
  >
    <form
      className={
        Object {
          "has": [Function],
          "is": [Function],
          "mix": [Function],
          "split": [Function],
          "state": [Function],
          "toString": [Function],
        }
      }
      onSubmit={[Function]}
    >
      <div
        className={
          Object {
            "has": [Function],
            "is": [Function],
            "mix": [Function],
            "split": [Function],
            "state": [Function],
            "toString": [Function],
          }
        }
      >
        <div
          className={
            Object {
              "has": [Function],
              "is": [Function],
              "mix": [Function],
              "split": [Function],
              "state": [Function],
              "toString": [Function],
            }
          }
        >
          <div
            className={
              Object {
                "has": [Function],
                "is": [Function],
                "mix": [Function],
                "split": [Function],
                "state": [Function],
                "toString": [Function],
              }
            }
          >
            <label
              className={
                Object {
                  "has": [Function],
                  "is": [Function],
                  "mix": [Function],
                  "split": [Function],
                  "state": [Function],
                  "toString": [Function],
                }
              }
              htmlFor="OPEXSetSDF"
            >
              <label
                className="Checkbox Checkbox_size_m"
              >
                <input
                  checked={true}
                  className="Checkbox-Input"
                  name="macroparameterSetIsTemplate"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span
                  className="Checkbox-Label"
                >
                  Учитывать в СДФ для калькуляции OPEX водозаб. скважины
                </span>
              </label>
            </label>
          </div>
        </div>
        <div
          className={
            Object {
              "has": [Function],
              "is": [Function],
              "mix": [Function],
              "split": [Function],
              "state": [Function],
              "toString": [Function],
            }
          }
        >
          <div
            className="GroupWrapper"
          >
            <div
              className={
                Object {
                  "has": [Function],
                  "is": [Function],
                  "mix": [Function],
                  "split": [Function],
                  "state": [Function],
                  "toString": [Function],
                }
              }
            >
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
                onClick={[Function]}
                role="presentation"
              >
                <span
                  className="Icon Icon_size_xs IconArrowDown"
                >
                  <svg
                    className="Icon-Svg"
                    viewBox="0 0 12 12"
                  >
                    <path
                      clipRule="evenodd"
                      d="M6.005 8.341L2.03 4.366l.707-.707 3.268 3.268 3.268-3.268.707.707-3.975 3.975z"
                      fillRule="evenodd"
                    />
                  </svg>
                </span>
                <span
                  className="Text text text_size_s text_view_primary"
                >
                  Нефтяной
                </span>
              </div>
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
              >
                <button
                  className="Button Button_size_s Button_view_ghost Button_form_default Button_withIcon Button_onlyIcon MixFocus"
                  onClick={[Function]}
                  title="Опции"
                  type="button"
                >
                  <span
                    className="Icon Icon_size_xs IconKebab Button-Icon"
                  >
                    <svg
                      className="Icon-Svg"
                      viewBox="0 0 16 16"
                    >
                      <path
                        d="M8 4.5c.83 0 1.5-.67 1.5-1.5S8.83 1.5 8 1.5 6.5 2.17 6.5 3 7.17 4.5 8 4.5zm0 2c-.83 0-1.5.67-1.5 1.5S7.17 9.5 8 9.5 9.5 8.83 9.5 8 8.83 6.5 8 6.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
                      />
                    </svg>
                  </span>
                </button>
              </div>
            </div>
            <div
              className={
                Object {
                  "has": [Function],
                  "is": [Function],
                  "mix": [Function],
                  "split": [Function],
                  "state": [Function],
                  "toString": [Function],
                }
              }
              data-testid="groupWrapper-body"
            >
              <div
                className="GroupPlaceholder"
              >
                <span
                  className="Text text text_size_s text_view_secondary"
                >
                  Пустой кейс
                </span>
                <button
                  className="Button Button_size_s Button_view_ghost Button_form_default MixFocus"
                  onClick={[Function]}
                >
                  Добавить статью
                </button>
              </div>
            </div>
          </div>
          <div
            className="GroupWrapper"
          >
            <div
              className={
                Object {
                  "has": [Function],
                  "is": [Function],
                  "mix": [Function],
                  "split": [Function],
                  "state": [Function],
                  "toString": [Function],
                }
              }
            >
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
                onClick={[Function]}
                role="presentation"
              >
                <span
                  className="Icon Icon_size_xs IconArrowDown"
                >
                  <svg
                    className="Icon-Svg"
                    viewBox="0 0 12 12"
                  >
                    <path
                      clipRule="evenodd"
                      d="M6.005 8.341L2.03 4.366l.707-.707 3.268 3.268 3.268-3.268.707.707-3.975 3.975z"
                      fillRule="evenodd"
                    />
                  </svg>
                </span>
                <span
                  className="Text text text_size_s text_view_primary"
                >
                  Газовый
                </span>
              </div>
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
              >
                <button
                  className="Button Button_size_s Button_view_ghost Button_form_default Button_withIcon Button_onlyIcon MixFocus"
                  onClick={[Function]}
                  title="Опции"
                  type="button"
                >
                  <span
                    className="Icon Icon_size_xs IconKebab Button-Icon"
                  >
                    <svg
                      className="Icon-Svg"
                      viewBox="0 0 16 16"
                    >
                      <path
                        d="M8 4.5c.83 0 1.5-.67 1.5-1.5S8.83 1.5 8 1.5 6.5 2.17 6.5 3 7.17 4.5 8 4.5zm0 2c-.83 0-1.5.67-1.5 1.5S7.17 9.5 8 9.5 9.5 8.83 9.5 8 8.83 6.5 8 6.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
                      />
                    </svg>
                  </span>
                </button>
              </div>
            </div>
            <div
              className={
                Object {
                  "has": [Function],
                  "is": [Function],
                  "mix": [Function],
                  "split": [Function],
                  "state": [Function],
                  "toString": [Function],
                }
              }
              data-testid="groupWrapper-body"
            >
              <div
                className="GroupPlaceholder"
              >
                <span
                  className="Text text text_size_s text_view_secondary"
                >
                  Пустой кейс
                </span>
                <button
                  className="Button Button_size_s Button_view_ghost Button_form_default MixFocus"
                  onClick={[Function]}
                >
                  Добавить статью
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className={
          Object {
            "has": [Function],
            "is": [Function],
            "mix": [Function],
            "split": [Function],
            "state": [Function],
            "toString": [Function],
          }
        }
      >
        <button
          className="Button Button_size_s Button_view_ghost Button_form_default Button_withIcon MixFocus"
          onClick={[Function]}
        >
          <span
            className="Icon Icon_size_xs IconAdd Button-Icon Button-Icon_position_left"
          >
            <svg
              className="Icon-Svg"
              viewBox="0 0 12 12"
            >
              <path
                d="M6 3H5v3H2v1h3v3h1V7h3V6H6V3z"
              />
            </svg>
          </span>
          <span
            className="Button-Label"
          >
            Добавить кейс
          </span>
        </button>
      </div>
    </form>
    <opex-economy-table
      opexCaseList={
        Array [
          Object {
            "caption": "Нефтяной",
            "id": "1",
            "name": "oil",
            "opexExpenseList": Array [],
            "yearEnd": 2030,
            "yearStart": 2015,
          },
          Object {
            "caption": "Газовый",
            "id": "2",
            "name": "gas",
            "opexExpenseList": Array [],
            "yearEnd": 2030,
            "yearStart": 2015,
          },
        ]
      }
    />
  </div>
</div>
`;

exports[`OpexSetWrapper обустройство snapshot test 1`] = `
<div
  className="BlockWrapper"
>
  <div
    className={
      Object {
        "has": [Function],
        "is": [Function],
        "mix": [Function],
        "split": [Function],
        "state": [Function],
        "toString": [Function],
      }
    }
  >
    <div
      className={
        Object {
          "has": [Function],
          "is": [Function],
          "mix": [Function],
          "split": [Function],
          "state": [Function],
          "toString": [Function],
        }
      }
    >
      <span
        className="Text text text_size_xs text_view_primary"
      >
        OPEX
      </span>
      <span
        className="Icon Icon_size_xs IconSelect"
      >
        <svg
          className="Icon-Svg"
          viewBox="0 0 12 12"
        >
          <path
            d="M6 8.5L10 4H2l4 4.5z"
          />
        </svg>
      </span>
    </div>
  </div>
  <div
    className={
      Object {
        "has": [Function],
        "is": [Function],
        "mix": [Function],
        "split": [Function],
        "state": [Function],
        "toString": [Function],
      }
    }
  >
    <form
      className={
        Object {
          "has": [Function],
          "is": [Function],
          "mix": [Function],
          "split": [Function],
          "state": [Function],
          "toString": [Function],
        }
      }
      onSubmit={[Function]}
    >
      <div
        className={
          Object {
            "has": [Function],
            "is": [Function],
            "mix": [Function],
            "split": [Function],
            "state": [Function],
            "toString": [Function],
          }
        }
      >
        <div
          className={
            Object {
              "has": [Function],
              "is": [Function],
              "mix": [Function],
              "split": [Function],
              "state": [Function],
              "toString": [Function],
            }
          }
        >
          <div
            className="GroupWrapper"
          >
            <div
              className={
                Object {
                  "has": [Function],
                  "is": [Function],
                  "mix": [Function],
                  "split": [Function],
                  "state": [Function],
                  "toString": [Function],
                }
              }
            >
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
                onClick={[Function]}
                role="presentation"
              >
                <span
                  className="Icon Icon_size_xs IconArrowDown"
                >
                  <svg
                    className="Icon-Svg"
                    viewBox="0 0 12 12"
                  >
                    <path
                      clipRule="evenodd"
                      d="M6.005 8.341L2.03 4.366l.707-.707 3.268 3.268 3.268-3.268.707.707-3.975 3.975z"
                      fillRule="evenodd"
                    />
                  </svg>
                </span>
                <span
                  className="Text text text_size_s text_view_primary"
                >
                  Автовывоз
                </span>
              </div>
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
              >
                <button
                  className="Button Button_size_s Button_view_ghost Button_form_default Button_withIcon Button_onlyIcon MixFocus"
                  onClick={[Function]}
                  title="Опции"
                  type="button"
                >
                  <span
                    className="Icon Icon_size_xs IconKebab Button-Icon"
                  >
                    <svg
                      className="Icon-Svg"
                      viewBox="0 0 16 16"
                    >
                      <path
                        d="M8 4.5c.83 0 1.5-.67 1.5-1.5S8.83 1.5 8 1.5 6.5 2.17 6.5 3 7.17 4.5 8 4.5zm0 2c-.83 0-1.5.67-1.5 1.5S7.17 9.5 8 9.5 9.5 8.83 9.5 8 8.83 6.5 8 6.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
                      />
                    </svg>
                  </span>
                </button>
              </div>
            </div>
            <div
              className={
                Object {
                  "has": [Function],
                  "is": [Function],
                  "mix": [Function],
                  "split": [Function],
                  "state": [Function],
                  "toString": [Function],
                }
              }
              data-testid="groupWrapper-body"
            >
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
              >
                <label
                  className={
                    Object {
                      "has": [Function],
                      "is": [Function],
                      "mix": [Function],
                      "split": [Function],
                      "state": [Function],
                      "toString": [Function],
                    }
                  }
                >
                  Год окончания
                </label>
                <div
                  className="Select Select_selected Select_size_m"
                >
                  <label
                    className="Select__label"
                    onClick={[Function]}
                    onMouseMove={[Function]}
                    onMouseOver={[Function]}
                  >
                    <input
                      autoComplete="off"
                      className="input input_view_default input_width_full input_size_m input_form_default Select__input"
                      name="OPEXYearEnd"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder="2018"
                      value="2018"
                    />
                    <div
                      className="Select__icon Select__icon_type_arrow"
                      onClick={[Function]}
                    >
                      <div
                        className="Select__icon-wrapper"
                      >
                        <span
                          className="Icon Icon_size_s IconSelect Select__arrow"
                        >
                          <svg
                            className="Icon-Svg"
                            viewBox="0 0 16 16"
                          >
                            <path
                              d="M3.5 5L8 10l4.5-5h-9z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <span
                      className="Select__delimiter"
                    />
                    <button
                      className="Button Button_size_xs Button_view_clear Button_form_default Button_withIcon Button_onlyIcon Select__icon Select__icon_type_delete"
                      onClick={[Function]}
                      tabIndex={-1}
                      type="button"
                    >
                      <svg
                        className="Button-Icon"
                        fill="none"
                        viewBox="0 0 12 12"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M2.16423 9.15573L2.84989 9.84958L5.99996 6.69962L9.14923 9.84898L9.15003 9.84978L9.84984 9.14986L6.69987 5.99973L9.85003 2.84969L9.14293 2.14258L6.0006 5.30042L2.85076 2.15041L2.15009 2.84961L5.30242 6.00205L2.16423 9.15573Z"
                          fill="black"
                        />
                      </svg>
                    </button>
                  </label>
                </div>
              </div>
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
              >
                <div
                  className={
                    Object {
                      "has": [Function],
                      "is": [Function],
                      "mix": [Function],
                      "split": [Function],
                      "state": [Function],
                      "toString": [Function],
                    }
                  }
                >
                  <label
                    className={
                      Object {
                        "has": [Function],
                        "is": [Function],
                        "mix": [Function],
                        "split": [Function],
                        "state": [Function],
                        "toString": [Function],
                      }
                    }
                    data-testid="label"
                  >
                    Дополнительные затраты на автовывоз
                  </label>
                  <div
                    className={
                      Object {
                        "has": [Function],
                        "is": [Function],
                        "mix": [Function],
                        "split": [Function],
                        "state": [Function],
                        "toString": [Function],
                      }
                    }
                  >
                    <div
                      className={
                        Object {
                          "has": [Function],
                          "is": [Function],
                          "mix": [Function],
                          "split": [Function],
                          "state": [Function],
                          "toString": [Function],
                        }
                      }
                    >
                      <div
                        className="TextField TextField_size_s TextField_view_default TextField_form_default TextField_width_full TextField_type_text"
                        data-testid="input"
                        onKeyDown={[Function]}
                      >
                        <input
                          autoFocus={false}
                          className="TextField-Input"
                          id="article_additionalCosts_1"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Значение"
                          type="text"
                          value=""
                        />
                        <div
                          className="TextField-Side TextField-Side_position_right TextField-Side_type_string"
                          title="тыс. ₽"
                        >
                          тыс. ₽
                        </div>
                      </div>
                    </div>
                    <div
                      className={
                        Object {
                          "has": [Function],
                          "is": [Function],
                          "mix": [Function],
                          "split": [Function],
                          "state": [Function],
                          "toString": [Function],
                        }
                      }
                    >
                      <button
                        className="Button Button_size_s Button_view_ghost Button_form_default Button_withIcon Button_onlyIcon MixFocus"
                        onClick={[Function]}
                        title="Опции"
                        type="button"
                      >
                        <span
                          className="Icon Icon_size_xs IconKebab Button-Icon"
                        >
                          <svg
                            className="Icon-Svg"
                            viewBox="0 0 16 16"
                          >
                            <path
                              d="M8 4.5c.83 0 1.5-.67 1.5-1.5S8.83 1.5 8 1.5 6.5 2.17 6.5 3 7.17 4.5 8 4.5zm0 2c-.83 0-1.5.67-1.5 1.5S7.17 9.5 8 9.5 9.5 8.83 9.5 8 8.83 6.5 8 6.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
                            />
                          </svg>
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            className="GroupWrapper"
          >
            <div
              className={
                Object {
                  "has": [Function],
                  "is": [Function],
                  "mix": [Function],
                  "split": [Function],
                  "state": [Function],
                  "toString": [Function],
                }
              }
            >
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
                onClick={[Function]}
                role="presentation"
              >
                <span
                  className="Icon Icon_size_xs IconArrowDown"
                >
                  <svg
                    className="Icon-Svg"
                    viewBox="0 0 12 12"
                  >
                    <path
                      clipRule="evenodd"
                      d="M6.005 8.341L2.03 4.366l.707-.707 3.268 3.268 3.268-3.268.707.707-3.975 3.975z"
                      fillRule="evenodd"
                    />
                  </svg>
                </span>
                <span
                  className="Text text text_size_s text_view_primary"
                >
                  Аренда МКОС
                </span>
              </div>
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
              >
                <button
                  className="Button Button_size_s Button_view_ghost Button_form_default Button_withIcon Button_onlyIcon MixFocus"
                  onClick={[Function]}
                  title="Опции"
                  type="button"
                >
                  <span
                    className="Icon Icon_size_xs IconKebab Button-Icon"
                  >
                    <svg
                      className="Icon-Svg"
                      viewBox="0 0 16 16"
                    >
                      <path
                        d="M8 4.5c.83 0 1.5-.67 1.5-1.5S8.83 1.5 8 1.5 6.5 2.17 6.5 3 7.17 4.5 8 4.5zm0 2c-.83 0-1.5.67-1.5 1.5S7.17 9.5 8 9.5 9.5 8.83 9.5 8 8.83 6.5 8 6.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
                      />
                    </svg>
                  </span>
                </button>
              </div>
            </div>
            <div
              className={
                Object {
                  "has": [Function],
                  "is": [Function],
                  "mix": [Function],
                  "split": [Function],
                  "state": [Function],
                  "toString": [Function],
                }
              }
              data-testid="groupWrapper-body"
            >
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
              >
                <label
                  className={
                    Object {
                      "has": [Function],
                      "is": [Function],
                      "mix": [Function],
                      "split": [Function],
                      "state": [Function],
                      "toString": [Function],
                    }
                  }
                >
                  Год окончания
                </label>
                <div
                  className="Select Select_selected Select_size_m"
                >
                  <label
                    className="Select__label"
                    onClick={[Function]}
                    onMouseMove={[Function]}
                    onMouseOver={[Function]}
                  >
                    <input
                      autoComplete="off"
                      className="input input_view_default input_width_full input_size_m input_form_default Select__input"
                      name="OPEXYearEnd"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder="2030"
                      value="2030"
                    />
                    <div
                      className="Select__icon Select__icon_type_arrow"
                      onClick={[Function]}
                    >
                      <div
                        className="Select__icon-wrapper"
                      >
                        <span
                          className="Icon Icon_size_s IconSelect Select__arrow"
                        >
                          <svg
                            className="Icon-Svg"
                            viewBox="0 0 16 16"
                          >
                            <path
                              d="M3.5 5L8 10l4.5-5h-9z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <span
                      className="Select__delimiter"
                    />
                    <button
                      className="Button Button_size_xs Button_view_clear Button_form_default Button_withIcon Button_onlyIcon Select__icon Select__icon_type_delete"
                      onClick={[Function]}
                      tabIndex={-1}
                      type="button"
                    >
                      <svg
                        className="Button-Icon"
                        fill="none"
                        viewBox="0 0 12 12"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M2.16423 9.15573L2.84989 9.84958L5.99996 6.69962L9.14923 9.84898L9.15003 9.84978L9.84984 9.14986L6.69987 5.99973L9.85003 2.84969L9.14293 2.14258L6.0006 5.30042L2.85076 2.15041L2.15009 2.84961L5.30242 6.00205L2.16423 9.15573Z"
                          fill="black"
                        />
                      </svg>
                    </button>
                  </label>
                </div>
              </div>
              <div
                className={
                  Object {
                    "has": [Function],
                    "is": [Function],
                    "mix": [Function],
                    "split": [Function],
                    "state": [Function],
                    "toString": [Function],
                  }
                }
              >
                <div
                  className={
                    Object {
                      "has": [Function],
                      "is": [Function],
                      "mix": [Function],
                      "split": [Function],
                      "state": [Function],
                      "toString": [Function],
                    }
                  }
                >
                  <label
                    className={
                      Object {
                        "has": [Function],
                        "is": [Function],
                        "mix": [Function],
                        "split": [Function],
                        "state": [Function],
                        "toString": [Function],
                      }
                    }
                    data-testid="label"
                  >
                    Количество дней использования МКОС за год
                  </label>
                  <div
                    className={
                      Object {
                        "has": [Function],
                        "is": [Function],
                        "mix": [Function],
                        "split": [Function],
                        "state": [Function],
                        "toString": [Function],
                      }
                    }
                  >
                    <div
                      className={
                        Object {
                          "has": [Function],
                          "is": [Function],
                          "mix": [Function],
                          "split": [Function],
                          "state": [Function],
                          "toString": [Function],
                        }
                      }
                    >
                      <div
                        className="TextField TextField_size_s TextField_view_default TextField_form_default TextField_width_full TextField_type_text"
                        data-testid="input"
                        onKeyDown={[Function]}
                      >
                        <input
                          autoFocus={false}
                          className="TextField-Input"
                          id="article_numberOfDays_1"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Значение"
                          type="text"
                          value=""
                        />
                        <div
                          className="TextField-Side TextField-Side_position_right TextField-Side_type_string"
                          title="дней"
                        >
                          дней
                        </div>
                      </div>
                    </div>
                    <div
                      className={
                        Object {
                          "has": [Function],
                          "is": [Function],
                          "mix": [Function],
                          "split": [Function],
                          "state": [Function],
                          "toString": [Function],
                        }
                      }
                    >
                      <button
                        className="Button Button_size_s Button_view_ghost Button_form_default Button_withIcon Button_onlyIcon MixFocus"
                        onClick={[Function]}
                        title="Опции"
                        type="button"
                      >
                        <span
                          className="Icon Icon_size_xs IconKebab Button-Icon"
                        >
                          <svg
                            className="Icon-Svg"
                            viewBox="0 0 16 16"
                          >
                            <path
                              d="M8 4.5c.83 0 1.5-.67 1.5-1.5S8.83 1.5 8 1.5 6.5 2.17 6.5 3 7.17 4.5 8 4.5zm0 2c-.83 0-1.5.67-1.5 1.5S7.17 9.5 8 9.5 9.5 8.83 9.5 8 8.83 6.5 8 6.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
                            />
                          </svg>
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </form>
    <opex-arrangement-table
      autoexport={
        Object {
          "opexExpenseList": Array [
            Object {
              "caption": "Дополнительные затраты на автовывоз",
              "id": "1",
              "name": "additionalCosts",
              "unit": "тыс. ₽",
              "valueTotal": 400,
            },
          ],
          "yearEnd": 2018,
          "yearStart": 2015,
        }
      }
      mkos={
        Object {
          "opexExpenseList": Array [
            Object {
              "caption": "Количество дней использования МКОС за год",
              "id": "1",
              "name": "numberOfDays",
              "unit": "дней",
              "valueTotal": 5840,
            },
          ],
          "yearEnd": 2030,
          "yearStart": 2015,
        }
      }
    />
  </div>
</div>
`;
